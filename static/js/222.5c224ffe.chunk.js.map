{"version":3,"file":"static/js/222.5c224ffe.chunk.js","mappings":"sKAAO,IAAMA,EAAM,8B,iJCKNC,EAASC,EAAAA,GAAAA,IAAH,4DAKNC,EAAQD,EAAAA,GAAAA,MAAH,6JAULE,EAASF,EAAAA,GAAAA,OAAH,wGAONG,EAAOH,EAAAA,GAAAA,GAAH,mEAKJI,EAAKJ,EAAAA,GAAAA,GAAH,mDAIFK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,8H,kBC2BvB,EAzDe,WAAO,IAAD,EACnB,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAO,UAAGF,EAAOG,IAAI,kBAAd,QAA4B,IAEzCC,EAAAA,EAAAA,YAAU,WACRF,GAAWG,EAASH,EAErB,GAAE,IAEH,IAAMG,EAAW,SAAAL,GACfM,EAAAA,EAAAA,IAAA,UACUrB,EAAAA,EADV,+BACoCe,GAAU,CAC1CO,QAAS,CACPC,cAAc,gOAGjBC,MAAK,SAAAC,GACJd,EAAUc,EAAIC,KAAKC,QACpB,GACJ,EAYD,OACE,+BACE,UAAC1B,EAAD,YACE,kBAAM2B,SAPS,SAAAC,GACnBA,EAAMC,iBACNV,EAASH,EACV,EAIK,WACE,SAACd,EAAD,CAAO4B,KAAK,OAAOC,MAAOf,EAASgB,SAfjB,SAAAC,GACxB,IAAMC,EAAeD,EAAIE,OAAOJ,MAChC,GAAqB,KAAjBG,EACF,OAAOnB,EAAU,CAAC,GAEpBA,EAAU,CAAEC,QAASkB,GACtB,KAUO,SAAC/B,EAAD,CAAQ2B,KAAK,SAAb,SAAsB,uCAGxB,0BACE,SAACzB,EAAD,UACGI,EAAO2B,KAAI,SAAAC,GAAE,OACZ,SAACjC,EAAD,WACE,SAACE,EAAD,CAAYgC,GAAE,kBAAaD,EAAGE,IAAMC,MAAO,CAAEC,KAAM9B,GAAnD,SACG0B,EAAGK,MAAQL,EAAGK,MAAQL,EAAGM,QAFnBN,EAAGE,GADF,YAYzB,C","sources":["Api/Api.jsx","pages/MoviesStyled.js","pages/Movies.jsx"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3';","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\n\nexport const Search = styled.div`\npadding: 20px;\nmargin-left: 20px;\n`\n\nexport const Input = styled.input`\nwidth: 200px;\nheight: 30px;\nborder-color: black;\nborder-radius: 8px;\nmargin-right: 5px;\nfont-size: large;\npadding-left: 10px;\n`\n\nexport const Button = styled.button`\n  width: 90px;\n  height: 30px;\n  border-color: black;\n  border-radius: 5px;\n`;\n\nexport const List = styled.li`\n  padding: 2px;\n  text-decoration: none;\n`;\n\nexport const Ul = styled.ul`\n  /* list-style: none; */\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n\n  &.active {\n    color: blue;\n  }\n`;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { URL } from 'Api/Api';\nimport { Search, Input, Button, List, Ul, StyledLink } from './MoviesStyled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [search, setSearch] = useSearchParams();\n  const movieId = search.get('movieId') ?? '';\n\n  useEffect(() => {\n    movieId && onSearch(movieId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onSearch = search => {\n    axios\n      .get(`${URL}/search/movie?query=${search}`, {\n        headers: {\n          Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyOWUzMjBiMGJmMWQxNzRiZTQ5MDgwZmRjYzExNzg0ZSIsInN1YiI6IjY0OTJmZGI1ZjlhYTQ3MDEyNTI4ZWUzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ORt8gsjacWQJrEciUN7bflQ7U3K2KgSN_HxgKWXEhr4`,\n        },\n      })\n      .then(res => {\n        setMovies(res.data.results);\n      });\n  };\n  const updateQueryString = evt => {\n    const movieIdValue = evt.target.value;\n    if (movieIdValue === '') {\n      return setSearch({});\n    }\n    setSearch({ movieId: movieIdValue });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSearch(movieId); \n  };\n  return (\n    <>\n      <Search>\n        <form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={movieId} onChange={updateQueryString} />\n          <Button type=\"submit\">Пошук</Button>\n        </form>\n\n        <div>\n          <Ul>\n            {movies.map(el => (\n              <List key={el.id}>\n                <StyledLink to={`/movies/${el.id}`} state={{ from: location }}>\n                  {el.title ? el.title : el.name}\n                </StyledLink>\n              </List>\n            ))}\n          </Ul>\n        </div>\n      </Search>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["URL","Search","styled","Input","Button","List","Ul","StyledLink","Link","useState","movies","setMovies","location","useLocation","useSearchParams","search","setSearch","movieId","get","useEffect","onSearch","axios","headers","Authorization","then","res","data","results","onSubmit","event","preventDefault","type","value","onChange","evt","movieIdValue","target","map","el","to","id","state","from","title","name"],"sourceRoot":""}